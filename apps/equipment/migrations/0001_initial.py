# Generated by Django 4.2.23 on 2025-08-15 19:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('company', '0002_initial'),
        ('personnel', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Department Name')),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('inventory_number', models.CharField(max_length=100, unique=True, verbose_name='Inventory Number')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('under_repair', 'Under Repair'), ('decommissioned', 'Decommissioned')], default='active', max_length=20, verbose_name='Status')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('manufacturer', models.CharField(blank=True, max_length=100, verbose_name='Manufacturer')),
                ('model_number', models.CharField(blank=True, max_length=100, verbose_name='Model Number')),
                ('serial_number', models.CharField(blank=True, max_length=100, verbose_name='Serial Number')),
                ('purchase_date', models.DateField(blank=True, null=True, verbose_name='Purchase Date')),
                ('needs_calibration', models.BooleanField(default=False, verbose_name='Needs Calibration')),
                ('calibration_frequency', models.PositiveIntegerField(blank=True, null=True, verbose_name='Calibration Frequency (days)')),
                ('next_calibration_date', models.DateField(blank=True, null=True, verbose_name='Next Calibration Date')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='company.department', verbose_name='Department')),
            ],
            options={
                'verbose_name': 'Equipment',
                'verbose_name_plural': 'Equipment',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Equipment Category',
                'verbose_name_plural': 'Equipment Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Type Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_measuring_instrument', models.BooleanField(default=False, verbose_name='Is Measuring Instrument')),
                ('requires_metrological_control', models.BooleanField(default=False, verbose_name='Requires Metrological Control')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
            ],
            options={
                'verbose_name': 'Equipment Type',
                'verbose_name_plural': 'Equipment Types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MaintenanceRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Maintenance Date')),
                ('maintenance_type', models.CharField(choices=[('preventive', 'Preventive Maintenance'), ('corrective', 'Corrective Maintenance'), ('predictive', 'Predictive Maintenance'), ('emergency', 'Emergency Repair')], default='preventive', max_length=20, verbose_name='Maintenance Type')),
                ('description', models.TextField(verbose_name='Description')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cost')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_records', to='equipment.equipment', verbose_name='Equipment')),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='performed_maintenance', to='personnel.employee', verbose_name='Performed By')),
            ],
            options={
                'verbose_name': 'Maintenance Record',
                'verbose_name_plural': 'Maintenance Records',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('document', models.FileField(upload_to='equipment_documents/', verbose_name='Document')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='equipment.equipment', verbose_name='Equipment')),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='equipment_document_uploaded_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Equipment Document',
                'verbose_name_plural': 'Equipment Documents',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.AddField(
            model_name='equipment',
            name='equipment_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='equipment.equipmenttype', verbose_name='Equipment Type'),
        ),
        migrations.AddField(
            model_name='equipment',
            name='responsible_person',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='responsible_for_equipment', to=settings.AUTH_USER_MODEL, verbose_name='Responsible Person'),
        ),
        migrations.CreateModel(
            name='CalibrationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('calibration_date', models.DateField(verbose_name='Calibration Date')),
                ('certificate_number', models.CharField(blank=True, max_length=100, verbose_name='Certificate Number')),
                ('description', models.TextField(verbose_name='Description')),
                ('results', models.TextField(verbose_name='Results')),
                ('passed', models.BooleanField(default=True, verbose_name='Passed Calibration')),
                ('next_calibration_date', models.DateField(blank=True, null=True, verbose_name='Next Calibration Date')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calibration_records', to='equipment.equipment', verbose_name='Equipment')),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='performed_calibrations', to=settings.AUTH_USER_MODEL, verbose_name='Performed By')),
            ],
            options={
                'verbose_name': 'Calibration Record',
                'verbose_name_plural': 'Calibration Records',
                'ordering': ['-calibration_date'],
            },
        ),
        migrations.CreateModel(
            name='EquipmentRegistry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorized_since', models.DateField(blank=True, null=True, verbose_name='Authorized Since')),
                ('authorized_until', models.DateField(blank=True, null=True, verbose_name='Authorized Until')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Maintenance')], default='active', max_length=50, verbose_name='Status')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('authorized_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='personnel.employee', verbose_name='Authorized User')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='equipment.equipment', verbose_name='Equipment')),
            ],
            options={
                'verbose_name': 'Equipment Registry Entry',
                'verbose_name_plural': 'Equipment Registry',
                'unique_together': {('equipment', 'authorized_user')},
            },
        ),
    ]
