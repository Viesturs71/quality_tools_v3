# Generated by Django 4.2.20 on 2025-06-03 06:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("company", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("personnel", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Department Name"),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="company.company",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="company.location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EquipmentLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("floor", models.CharField(blank=True, max_length=20, null=True)),
                ("building", models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="EquipmentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, verbose_name="Type Name")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "is_measuring_instrument",
                    models.BooleanField(
                        default=False, verbose_name="Is Measuring Instrument"
                    ),
                ),
                (
                    "maintenance_interval",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Maintenance Interval (days)",
                    ),
                ),
                (
                    "maintenance_procedure",
                    models.TextField(
                        blank=True, null=True, verbose_name="Maintenance Procedure"
                    ),
                ),
                (
                    "metrological_control_required",
                    models.BooleanField(
                        default=False, verbose_name="Metrological Control Required"
                    ),
                ),
                (
                    "standard_control_interval",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Standard Control Interval (months)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
            ],
            options={
                "verbose_name": "Equipment Type",
                "verbose_name_plural": "Equipment Types",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="eq_type_name_idx"),
                    models.Index(
                        fields=["is_measuring_instrument"], name="eq_type_meas_idx"
                    ),
                    models.Index(fields=["is_active"], name="eq_type_active_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="Equipment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Name")),
                (
                    "model",
                    models.CharField(blank=True, max_length=255, verbose_name="Model"),
                ),
                (
                    "type_details",
                    models.TextField(blank=True, verbose_name="Type Details"),
                ),
                (
                    "manufacturer",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Manufacturer"
                    ),
                ),
                (
                    "inventory_number",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Inventory Number"
                    ),
                ),
                (
                    "serial_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Serial Number"
                    ),
                ),
                (
                    "responsible_person",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Responsible Person"
                    ),
                ),
                (
                    "manufacture_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Manufacture Date"
                    ),
                ),
                (
                    "purchase_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Purchase Date"
                    ),
                ),
                (
                    "purchase_price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Purchase Price",
                    ),
                ),
                (
                    "is_measuring_instrument",
                    models.BooleanField(
                        default=False, verbose_name="Is Measuring Instrument"
                    ),
                ),
                (
                    "metrological_control_type",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Metrological Control Type",
                    ),
                ),
                (
                    "metrological_control_institution",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="Metrological Control Institution",
                    ),
                ),
                (
                    "certificate_number",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Certificate Number"
                    ),
                ),
                (
                    "certificate_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Certificate Date"
                    ),
                ),
                (
                    "control_periodicity",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        verbose_name="Control Periodicity (months)",
                    ),
                ),
                (
                    "next_verification_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Next Verification Date"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("under_repair", "Under Repair"),
                            ("decommissioned", "Decommissioned"),
                        ],
                        default="active",
                        max_length=20,
                        verbose_name="Status",
                    ),
                ),
                (
                    "additional_info",
                    models.TextField(blank=True, verbose_name="Additional Info"),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "department",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="equipment.department",
                        verbose_name="Department",
                    ),
                ),
                (
                    "equipment_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="equipment.equipmenttype",
                        verbose_name="Equipment Type",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="equipment.equipmentlocation",
                        verbose_name="Location",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment",
                "verbose_name_plural": "Equipment",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MaintenanceRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "maintenance_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Maintenance Date",
                    ),
                ),
                (
                    "maintenance_type",
                    models.CharField(
                        choices=[
                            ("routine", "Routine Maintenance"),
                            ("repair", "Repair"),
                            ("calibration", "Calibration"),
                            ("inspection", "Inspection"),
                            ("upgrade", "Upgrade/Modification"),
                            ("other", "Other"),
                        ],
                        default="routine",
                        max_length=20,
                        verbose_name="Maintenance Type",
                    ),
                ),
                (
                    "performed_by",
                    models.CharField(max_length=255, verbose_name="Performed By"),
                ),
                ("description", models.TextField(verbose_name="Description")),
                (
                    "next_maintenance_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Next Maintenance Date"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created At"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="Updated At"),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="maintenance_records",
                        to="equipment.equipment",
                        verbose_name="Equipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Maintenance Record",
                "verbose_name_plural": "Maintenance Records",
                "ordering": ["-maintenance_date"],
                "indexes": [
                    models.Index(fields=["maintenance_date"], name="maint_date_idx"),
                    models.Index(fields=["equipment"], name="maint_equip_idx"),
                    models.Index(
                        fields=["next_maintenance_date"], name="next_maint_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="EquipmentRegistry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("authorized_since", models.DateField(blank=True, null=True)),
                ("authorized_from", models.DateField(blank=True, null=True)),
                ("authorized_until", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("maintenance", "Maintenance"),
                        ],
                        default="active",
                        max_length=50,
                    ),
                ),
                ("notes", models.TextField(blank=True)),
                (
                    "authorized_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="personnel.employee",
                    ),
                ),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="equipment.equipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment Registry Entry",
                "verbose_name_plural": "Equipment Registry",
                "unique_together": {("equipment", "authorized_user")},
            },
        ),
        migrations.CreateModel(
            name="EquipmentDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                ("document", models.FileField(upload_to="equipment_documents/")),
                ("external_url", models.URLField(blank=True, null=True)),
                (
                    "document_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "internal_reference",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("uploaded_at", models.DateTimeField(auto_now_add=True)),
                (
                    "equipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="equipment.equipment",
                    ),
                ),
                (
                    "uploaded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="equipment_documents_uploaded",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Uploaded by",
                    ),
                ),
            ],
            options={
                "verbose_name": "Equipment Document",
                "verbose_name_plural": "Equipment Documents",
                "ordering": ["-uploaded_at"],
                "indexes": [
                    models.Index(fields=["equipment"], name="doc_equipment_idx"),
                    models.Index(fields=["title"], name="doc_title_idx"),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="equipment",
            index=models.Index(
                fields=["inventory_number"], name="equipment_e_invento_3592e9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="equipment",
            index=models.Index(fields=["status"], name="equipment_e_status_fb8540_idx"),
        ),
    ]
